# Generated by Django 2.2.9 on 2020-03-18 07:50

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('peoplemeasurement', '0005_druktemonitor_quarter_view_20200318_0847'),
    ]
    _VIEW_NAME = "druktemonitor_hourly_view"

    sql = f"""
        CREATE VIEW {_VIEW_NAME} AS
        with Raw as(
        select
            sensor,
            timestamp,
            coalesce(sum((detail_elems ->> 'count')::integer) FILTER (WHERE detail_elems ->> 'direction' = 'down'), 0) +
            coalesce(sum((detail_elems ->> 'count')::integer) FILTER (WHERE detail_elems ->> 'direction' = 'up'), 0) as count
        FROM
            peoplemeasurement_peoplemeasurement,
            jsonb_array_elements(details) detail_elems
        where
            date_trunc('hour', timestamp) = date_trunc('hour', now() - interval '1 hours')
            and sensor in ('GAWW-01', 'GAWW-02', 'GAWW-03', 'GAWW-04', 'GAWW-05')
        group by
            sensor,
            timestamp
        order by
            sensor,
            timestamp
        ),
        QuarterHourTable as (
            SELECT
                sensor,
                date_trunc('hour', timestamp) + date_part('minute', timestamp)::int / 15 * interval '15 min' as timestamp_rounded,
                avg(count) as count
            FROM
                Raw
            group by
                sensor,
                timestamp_rounded
            order by
                sensor,
                timestamp_rounded
        ),
        Hourlytable as (
        select
            sensor,
            date_trunc('hour', timestamp_rounded) as timestamp_rounded_hour,
            avg(count) as count
        from
            QuarterHourTable
        group by
            sensor,
            timestamp_rounded_hour
        order by
            sensor,
            timestamp_rounded_hour
        )
        select
            timestamp_rounded_hour as timestamp,
            sum(count)
        from
            HourlyTable
        group by
            timestamp
        order by
            timestamp;
    """

    reverse_sql = f"drop view if exists {_VIEW_NAME};"


    operations = [
        migrations.RunSQL(
            sql=sql,
            reverse_sql=reverse_sql
        ),
    ]
